<launch>
  <arg name="model" default="burger" doc="model type burger"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <arg name="world_type" default="two_rooms_v3"/>
  <arg name="map_file_path" default="$(find osu_semantic_mapping)/worlds/$(arg world_type)/$(arg world_type)"/>
  <arg name="map_file" default="$(arg map_file_path).yaml"/>
  <arg name="world_file" value="$(arg map_file_path).world"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_file)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
<!--  <node pkg="osu_semantic_mapping" type = "move_base.py" name="movebase_client_py" />-->

  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  <node name="static_transform_publisher" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /base_footprint /base_scan 100"/>
<!--  <node name="static_transform_publisher_2" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /base_footprint /base_link 100"/>-->

  <include file="$(find turtlebot3_navigation)/launch/amcl.launch">
<!--     <remap from="base_link" to="base_footprint" />-->
  </include>

  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="false"/>
  </include>
</launch>